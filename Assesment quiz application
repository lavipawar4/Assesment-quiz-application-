here...how you can implement the quiz app in three ways using Python:

Assignment 1: Quiz App - Data Saved in Program Memory

This version stores the quiz questions and answers directly in the program's memory as a dictionary.

def quiz_memory():
    # Data stored in memory
    questions = {
        "What is the capital of France?": "Paris",
        "What is 2 + 2?": "4",
        "Who wrote 'Hamlet'?": "Shakespeare"
    }

    score = 0
    for question, answer in questions.items():
        user_answer = input(question + " ")
        if user_answer.strip().lower() == answer.lower():
            print("Correct!")
            score += 1
        else:
            print(f"Wrong! The correct answer is {answer}.")
    print(f"Your final score is: {score}/{len(questions)}")

# Call the function
quiz_memory()


---

Assignment 2: Quiz App - Data Saved in Files

This version retrieves the questions and answers from a text file.

Steps:

1. Create a file quiz_data.txt with the following content:

What is the capital of France?|Paris
What is 2 + 2?|4
Who wrote 'Hamlet'?|Shakespeare


2. Python code:



def quiz_file():
    try:
        with open("quiz_data.txt", "r") as file:
            questions = file.readlines()

        score = 0
        for line in questions:
            question, answer = line.strip().split("|")
            user_answer = input(question + " ")
            if user_answer.strip().lower() == answer.lower():
                print("Correct!")
                score += 1
            else:
                print(f"Wrong! The correct answer is {answer}.")
        print(f"Your final score is: {score}/{len(questions)}")
    except FileNotFoundError:
        print("Quiz data file not found!")

# Call the function
quiz_file()


---

Assignment 3: Quiz App - Data Saved in DBMS

This version uses SQLite to store and retrieve quiz data.

import sqlite3

def setup_database():
    conn = sqlite3.connect("quiz.db")
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS quiz (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            question TEXT NOT NULL,
            answer TEXT NOT NULL
        )
    """)
    # Add sample data
    cursor.execute("DELETE FROM quiz")  # Reset table
    sample_data = [
        ("What is the capital of France?", "Paris"),
        ("What is 2 + 2?", "4"),
        ("Who wrote 'Hamlet'?", "Shakespeare")
    ]
    cursor.executemany("INSERT INTO quiz (question, answer) VALUES (?, ?)", sample_data)
    conn.commit()
    conn.close()

def quiz_db():
    conn = sqlite3.connect("quiz.db")
    cursor = conn.cursor()
    cursor.execute("SELECT question, answer FROM quiz")
    questions = cursor.fetchall()
    score = 0
    for question, answer in questions:
        user_answer = input(question + " ")
        if user_answer.strip().lower() == answer.lower():
            print("Correct!")
            score += 1
        else:
            print(f"Wrong! The correct answer is {answer}.")
    print(f"Your final score is: {score}/{len(questions)}")
    conn.close()

# Setup database and run the quiz
setup_database()
quiz_db()


---

Execution Steps:

1. Assignment 1: Directly run the quiz_memory() function.


2. Assignment 2: Create the quiz_data.txt file, then run quiz_file().


3. Assignment 3: Run the setup_database() function first to initialize the database, then execute quiz_db().



This setup shows three different ways to manage data storage in Python programs.

